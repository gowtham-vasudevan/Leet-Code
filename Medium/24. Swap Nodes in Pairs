/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(!head) return nullptr;
        ListNode* first = head, *second = head->next, *prev;
        while(first && second){
            if(first == head){
                ListNode* tmp = second->next;
                second->next = first;
                first->next = tmp;
                prev = first;
                head = second;
                first = tmp;
                if(first) second = first->next;
            }
            else{
                ListNode* tmp = second->next;
                second->next = first;
                first->next = tmp;
                prev->next = second;
                prev = first;
                first = tmp;
                if(first) second = first->next;
            }
        }

        return head;
    }
};
